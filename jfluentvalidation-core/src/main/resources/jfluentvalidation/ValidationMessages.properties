javax.validation.constraints.AssertFalse.message     = must be false
javax.validation.constraints.AssertTrue.message      = must be true
javax.validation.constraints.DecimalMax.message      = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message          = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Email.message           = must be a well-formed email address
javax.validation.constraints.Future.message          = must be a future date
javax.validation.constraints.FutureOrPresent.message = must be a date in the present or in the future
javax.validation.constraints.Max.message             = must be less than or equal to {value}
javax.validation.constraints.Min.message             = must be greater than or equal to {value}
javax.validation.constraints.Negative.message        = must be less than 0
javax.validation.constraints.NegativeOrZero.message  = must be less than or equal to 0
javax.validation.constraints.NotBlank.message        = must not be blank
javax.validation.constraints.NotEmpty.message        = must not be empty
javax.validation.constraints.NotNull.message         = must not be null
javax.validation.constraints.Null.message            = must be null
javax.validation.constraints.Past.message            = must be a past date
javax.validation.constraints.PastOrPresent.message   = must be a date in the past or in the present
javax.validation.constraints.Pattern.message         = must match "{regexp}"
javax.validation.constraints.Positive.message        = must be greater than 0
javax.validation.constraints.PositiveOrZero.message  = must be greater than or equal to 0
javax.validation.constraints.Size.message            = size must be between {min} and {max}




jfluentvalidation.constraints.IsEmpty.message=
jfluentvalidation.constraints.IsEquals.message=
jfluentvalidation.constraints.IsNotEmpty.message=
jfluentvalidation.constraints.IsNotEmptyOrNull.message=
jfluentvalidation.constraints.IsNotEquals.message=
jfluentvalidation.constraints.IsNotNull.message=
jfluentvalidation.constraints.IsNull.message=
jfluentvalidation.constraints.IsNullOrEmpty.message=

jfluentvalidation.constraints.HasSize.message=


jfluentvalidation.constraints.array.Contains.message=
jfluentvalidation.constraints.array.length.ArrayExactLength.message=
jfluentvalidation.constraints.array.length.ArrayLength.message=
jfluentvalidation.constraints.array.length.ArrayBetweenLength.message=
jfluentvalidation.constraints.array.length.ArrayMaximumLength.message=
jfluentvalidation.constraints.array.length.BooleanArrayMinimumLength.message=



jfluentvalidation.constraints.charsequence.Contains.message=
jfluentvalidation.constraints.charsequence.ContainsIgnoreCase.message=
jfluentvalidation.constraints.charsequence.ContainsOnlyDigits.message=
jfluentvalidation.constraints.charsequence.ContainsOnlyOnce.message=
jfluentvalidation.constraints.charsequence.ContainsOnlyWhitespaces.message=
jfluentvalidation.constraints.charsequence.ContainsPattern.message=
jfluentvalidation.constraints.charsequence.ContainsSequence.message=
jfluentvalidation.constraints.charsequence.ContainsSubsequence.message=
jfluentvalidation.constraints.charsequence.ContainsWhitespaces.message=
jfluentvalidation.constraints.charsequence.DoesNotContainAnyWhitespaces.message=
jfluentvalidation.constraints.charsequence.EndsWith.message=
jfluentvalidation.constraints.charsequence.HasLengthBetween.message=
jfluentvalidation.constraints.charsequence.HasLength.message={PropertyName} must have length {length}
jfluentvalidation.constraints.charsequence.HasLengthGreaterThan.message=
jfluentvalidation.constraints.charsequence.HasLengthGreaterThanOrEqualTo.message=
jfluentvalidation.constraints.charsequence.HasLengthLessThan.message=
jfluentvalidation.constraints.charsequence.HasLengthLessThanOrEqualTo.message=
jfluentvalidation.constraints.charsequence.HasSameLengthAs.message=
jfluentvalidation.constraints.charsequence.IsBlank.message=
jfluentvalidation.constraints.charsequence.IsEmail.message=
jfluentvalidation.constraints.charsequence.IsEqualToIgnoringCase.message=
jfluentvalidation.constraints.charsequence.IsEqualToIgnoringWhitespace.message=
jfluentvalidation.constraints.charsequence.IsEqualToNormalizingWhitespace.message=
jfluentvalidation.constraints.charsequence.IsLowerCase.message=
jfluentvalidation.constraints.charsequence.IsSubstringOf.message=
jfluentvalidation.constraints.charsequence.IsUppserCase.message=
jfluentvalidation.constraints.charsequence.Length.message=
jfluentvalidation.constraints.charsequence.MatchesConstraint.message=
jfluentvalidation.constraints.charsequence.StartsWith.message=



jfluentvalidation.constraints.comparable.IsBetween.message=
jfluentvalidation.constraints.comparable.IsEqualAccordingToCompareTo.message=
jfluentvalidation.constraints.comparable.IsGreaterThan.message=
jfluentvalidation.constraints.comparable.IsGreaterThanOrEqualTo.message=
jfluentvalidation.constraints.comparable.IsLessThan.message=
jfluentvalidation.constraints.comparable.IsLessThanOrEqualTo.message=
jfluentvalidation.constraints.comparable.IsNotBetween.message=
jfluentvalidation.constraints.comparable.IsNotEqualAccordingToCompareTo.message=


jfluentvalidation.constraints.file.CanRead.message=
jfluentvalidation.constraints.file.CanWrite.message=
jfluentvalidation.constraints.file.FileExists.message=
jfluentvalidation.constraints.file.HasContent.message=
jfluentvalidation.constraints.file.HasExtension.message=
jfluentvalidation.constraints.file.HasName.message=
jfluentvalidation.constraints.file.IsAbsolute.message=
jfluentvalidation.constraints.file.IsDirectory.message=
jfluentvalidation.constraints.file.IsFile.message=
jfluentvalidation.constraints.file.IsRelative.message=


jfluentvalidation.constraints.inputstream.HasContent.message=
jfluentvalidation.constraints.inputstream.HasSameContentAs.message=


jfluentvalidation.constraints.iterable.ContainsAllIn.message=
jfluentvalidation.constraints.iterable.ContainsAnyIn.message=
jfluentvalidation.constraints.iterable.Contains.message=
jfluentvalidation.constraints.iterable.ContainsExactlyElementsIn.message=
jfluentvalidation.constraints.iterable.ContainsNoneIn.message=
jfluentvalidation.constraints.iterable.DoesNotContain.message=
jfluentvalidation.constraints.iterable.Item.message=
jfluentvalidation.constraints.iterable.IterableItem.message=


jfluentvalidation.constraints.map.ContainsEntries.message=
jfluentvalidation.constraints.map.ContainsKeys.message=
jfluentvalidation.constraints.map.ContainsValues.message=
jfluentvalidation.constraints.map.Entry.message=
jfluentvalidation.constraints.map.Key.message=
jfluentvalidation.constraints.map.Value.message=
jfluentvalidation.constraints.map.DoesNotContain.message=
jfluentvalidation.constraints.map.DoesNotContainKeys.message=
jfluentvalidation.constraints.map.DoesNotContainValues.message=


jfluentvalidation.constraints.time.IsAfter.message=
jfluentvalidation.constraints.time.IsAfterOrEqual.message=
jfluentvalidation.constraints.time.IsBefore.message=
jfluentvalidation.constraints.time.IsBeforeOrEqual.message=
jfluentvalidation.constraints.time.IsToday.message=

jfluentvalidation.constraints.HasAnchor.message = must
jfluentvalidation.constraints.HasAuthority.message=must
jfluentvalidation.constraints.HasHost.message=must
jfluentvalidation.constraints.HasNoParameter.message=must
jfluentvalidation.constraints.HasParameter.message=must have parameter name {name}${PropertyValue == null ? '' : ' with PropertyValue '}{PropertyValue}
jfluentvalidation.constraints.HasPath.message=must
jfluentvalidation.constraints.HasPort.message=must
jfluentvalidation.constraints.HasProtocol.message =must
jfluentvalidation.constraints.HasQuery.message=must have query equal to {PropertyValue}

jfluentvalidation.constraints.url.HasAnchor.message=
jfluentvalidation.constraints.url.HasProtocol.message=






org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.Currency.message                = invalid currency (must be one of {value})
org.hibernate.validator.constraints.EAN.message                     = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
org.hibernate.validator.constraints.ISBN.message                    = invalid ISBN
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.CodePointLength.message         = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = the check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = the check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = the check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = the check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = may not be empty
org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.UniqueElements.message          = must only contain unique elements
org.hibernate.validator.constraints.URL.message                     = must be a valid URL

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number

org.hibernate.validator.constraints.pl.REGON.message                = invalid Polish Taxpayer Identification Number (REGON)
org.hibernate.validator.constraints.pl.NIP.message                  = invalid VAT Identification Number (NIP)
org.hibernate.validator.constraints.pl.PESEL.message                = invalid Polish National Identification Number (PESEL)

org.hibernate.validator.constraints.time.DurationMax.message        = must be shorter than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
org.hibernate.validator.constraints.time.DurationMin.message        = must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
